input
{
    file{ 
        path => "C:/Users/Ankit/Downloads/sush-weather-app-logs-*" 
        start_position => "beginning" 
    }
}
filter
{
	grok{
		match => {
			"message" => "^%{TIMESTAMP_ISO8601:timestamp} %{WORD:component}\[%{WORD:process}\]\: %{GREEDYDATA:msg_body}"
		}
	}
	kv {
      source => "msg_body"
      prefix => "msg_"
      include_keys => [ "at", "method", "path", "host", "request_id", "fwd", "dyno", "connect", "service", "status", "bytes", "source", "id", "wait", "timeout", "state" ]
    }
	date {
      match => [ "timestamp", "ISO8601" ]
      target => "log_timestamp"
    }
    mutate {
        rename => { "msg_fwd" => "clientip" }
      }
    
    grok {
     match => { "clientip" => "%{WORD:addr1}.%{WORD:addr2}.%{WORD:addr3}.%{WORD:addr4}" }     
    }
    if "_grokparsefailure" in [tags] {
        drop { }
    }
    mutate {
     add_field => {
     "spamhaus_reverse_lookup" => "%{addr4}.%{addr3}.%{addr2}.%{addr1}.zen.spamhaus.org" 
     }
    }
    dns {
     resolve => [ "spamhaus_reverse_lookup" ] 
     nameserver => [ "10.0.1.1" ]
     add_tag => [ "dns_successful_lookup" ]
     action => replace
   }
   if "dns_successful_lookup" in [tags] {
     if [spamhaus_reverse_lookup] == "127.0.0.2" { 
       mutate {
          add_tag => [ "spam_address" ]
       }
     }
   }
     translate {
     field => "clientip"
     destination => "malicious url"
     dictionary_path => "malicious.yaml"
     }
	
    mutate {
      remove_field => [ "message","msg_body" ]
    } 
    elasticsearch {
    hosts => localhost
    index => "blueliv-crimeservers"
    query => "ip:%{clientip}"    
    fields => { "ip" => "crimeip" }
    result_size => 1
    enable_sort => false
  }
  if [crimeip] {
    mutate {
      add_tag => ["crimeserver"]
      remove_field => "crimeip"
    }
  }
    
}


output
{
    stdout {
		codec => dots
	  }
    elasticsearch {
 		hosts => ["http://localhost:9200"]
 		index => "heroku_final"
  	}
	

 	
}